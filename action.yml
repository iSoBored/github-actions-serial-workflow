name: Check Running Workflows
description: Check for existing workflows which are in progress or queued
# inputs:
#   SENDGRID_TOKEN:
#     required: true
#     description: Token used for sendgrid auth
#   EMAIL_SENDER:
#     required: true
#     description: Email used to send mail
runs:
  using: composite
  steps:
    - name: Get Current workflow_id
      id: get_id
      run: |
        echo "Getting the current workflow_id..."
        curl -L \
        --url https://api.github.com/repos/${{ github.repository }}/actions/runs/${{ github.run_id }} \
        -H "Accept: application/vnd.github+json" \
        -H "Authorization: Bearer ${{ env.GITHUB_TOKEN }}" \
        -H "X-GitHub-Api-Version: 2022-11-28" > workflow_run.json
        echo "workflow_id=$(jq -r '.workflow_id' workflow_run.json)" >> "$GITHUB_OUTPUT"
      shell: bash
    - name: List Recent Runs
      run: |
        echo "Getting the list of recent runs..."
        curl -vLD recent_runs_headers.txt \
        --url https://api.github.com/repos/${{ github.repository }}/actions/workflows/${{ steps.get_id.outputs.workflow_id }}/runs?per_page=5 \
        -H "Accept: application/vnd.github+json" \
        -H "Authorization: Bearer ${{ env.GITHUB_TOKEN }}" \
        -H "X-GitHub-Api-Version: 2022-11-28" > recent_runs.json
        printf "recent_runs_headers.txt:\n$(cat recent_runs_headers.txt)\n"
      shell: bash
    - name: Get Queued Runs
      run: |
        echo "Getting the list of queued runs..."
        curl -vLD queued_runs_headers.txt \
        --url https://api.github.com/repos/${{ github.repository }}/actions/workflows/${{ steps.get_id.outputs.workflow_id }}/runs?status=queued \
        -H "Accept: application/vnd.github+json" \
        -H "Authorization: Bearer ${{ env.GITHUB_TOKEN }}" \
        -H "X-GitHub-Api-Version: 2022-11-28" > queued_runs.json
        printf "queued_runs_headers.txt:\n$(cat queued_runs_headers.txt)\n"
        printf "queued_runs.json:\n$(cat queued_runs.json)\n"
        printf "Queued Runs:\n$(jq -r '.workflow_runs[].run_number' queued_runs.json | tee -a all_runs.txt)\n"
        printf "all_runs.txt:\n$(cat all_runs.txt)\n"
      shell: bash
    - name: Get In Progress Runs
      run: |
        echo "Getting the list of in progress runs..."
        curl -vLD in_progress_runs_headers.txt \
        --url https://api.github.com/repos/${{ github.repository }}/actions/workflows/${{ steps.get_id.outputs.workflow_id }}/runs?status=in_progress \
        -H "Accept: application/vnd.github+json" \
        -H "Authorization: Bearer ${{ env.GITHUB_TOKEN }}" \
        -H "X-GitHub-Api-Version: 2022-11-28" > in_progress_runs.json
        printf "in_progress_runs_headers.txt:\n$(cat in_progress_runs_headers.txt)\n"
        printf "in_progress_runs.json:\n$(cat in_progress_runs.json)\n"
        printf "In Progress Runs:\n$(jq -r '.workflow_runs[].run_number' in_progress_runs.json | tee -a all_runs.txt)\n"
        printf "all_runs.txt:\n$(cat all_runs.txt)\n"
      shell: bash
    - name: Log All Runs
      run: |
        printf "All Runs:\n$(cat all_runs.txt)\n"
      shell: bash
    - name: Check Existing Runs
      id: check_existing
      env:
        CURRENT_RUN_NUMBER: ${{ github.run_number }}
      run: |
        chmod +x ${{ github.action_path }}/scripts/get_existing_runs.sh
        ${{ github.action_path }}/scripts/get_existing_runs.sh
      shell: bash
    - if: steps.check_existing.outputs.existing_runs != 'true'
      run: |
        echo "No existing runs found. Action will proceed."
      shell: bash
    - if: steps.check_existing.outputs.no_runs == 'true'
      uses: actions/github-script@v7
      with:
        script: |
          core.setFailed("Failing the action as no runs were found.")
    - if: steps.check_existing.outputs.existing_runs == 'true'
      uses: actions/github-script@v7
      with:
        script: |
          core.setFailed("Failing the action as the current run number is ${{ github.run_number }} \
          but we found a workflow running with run number ${{ steps.check_existing.outputs.existing_run_number }}.")
